name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}
        fetch-depth: 0
    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 13
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
    - name: Set Dirigible Version
      run: echo DIRIGIBLE_VERSION=${GITHUB_REF#refs/*/} | tr v " " | sed 's/ //'  >> $GITHUB_ENV
    - name: Updates /.m2/settings.xml
      run: echo '${{ secrets.MAVEN_M2_SETTINGS }}' > /home/runner/.m2/settings.xml

    - name: Build Dirigible
      run: mvn clean install -Dmaven.javadoc.skip=false

#-----------------Publish to DockerHub-------------------#

    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
    - name: Push Anonymous
      run: |
        cd releng/anonymous-all
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-anonymous -f Dockerfile-base .
        docker tag dirigible-base-platform-anonymous dirigiblelabs/dirigible-base-platform-anonymous:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-anonymous:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-anonymous .
        docker tag dirigible-anonymous dirigiblelabs/dirigible-anonymous:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-anonymous:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push Anonymous - Runtime
      run: |
        cd releng/anonymous-runtime
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-runtime-anonymous -f Dockerfile-base .
        docker tag dirigible-base-platform-runtime-anonymous dirigiblelabs/dirigible-base-platform-runtime-anonymous:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-runtime-anonymous:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-runtime-anonymous .
        docker tag dirigible-runtime-anonymous dirigiblelabs/dirigible-runtime-anonymous:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-runtime-anonymous:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push OpenShift
      run: |
        cd releng/openshift-all
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-openshift -f Dockerfile-base .
        docker tag dirigible-base-platform-openshift dirigiblelabs/dirigible-base-platform-openshift:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-openshift:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-openshift .
        docker tag dirigible-openshift dirigiblelabs/dirigible-openshift:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-openshift:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push SAP Cloud Foundry
      run: |
        cd releng/sap-cf-all
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-sap-cf -f Dockerfile-base .
        docker tag dirigible-base-platform-sap-cf dirigiblelabs/dirigible-base-platform-sap-cf:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-sap-cf:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-sap-cf .
        docker tag dirigible-sap-cf dirigiblelabs/dirigible-sap-cf:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-sap-cf:$DIRIGIBLE_VERSION
        cd ../../
    - name: Push SAP Cloud Foundry - Runtime
      run: |
        cd releng/sap-cf-runtime
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-sap-cf-runtime -f Dockerfile-base .
        docker tag dirigible-base-platform-sap-cf-runtime dirigiblelabs/dirigible-base-platform-sap-cf-runtime:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-sap-cf-runtime:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-sap-cf-runtime .
        docker tag dirigible-sap-cf-runtime dirigiblelabs/dirigible-sap-cf-runtime:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-sap-cf-runtime:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push SAP Kyma
      run: |
        cd releng/sap-kyma-all
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-sap-kyma -f Dockerfile-base .
        docker tag dirigible-base-platform-sap-kyma dirigiblelabs/dirigible-base-platform-sap-kyma:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-sap-kyma:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-sap-kyma .
        docker tag dirigible-sap-kyma dirigiblelabs/dirigible-sap-kyma:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-sap-kyma:$DIRIGIBLE_VERSION
        cd ../../
    - name: Push SAP Kyma - Runtime
      run: |
        cd releng/sap-kyma-runtime
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-sap-kyma-runtime -f Dockerfile-base .
        docker tag dirigible-base-platform-sap-kyma-runtime dirigiblelabs/dirigible-base-platform-sap-kyma-runtime:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-sap-kyma-runtime:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-sap-kyma-runtime .
        docker tag dirigible-sap-kyma-runtime dirigiblelabs/dirigible-sap-kyma-runtime:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-sap-kyma-runtime:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push Dirigible
      run: |
        cd releng/server-all
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform -f Dockerfile-base .
        docker tag dirigible-base-platform dirigiblelabs/dirigible-base-platform:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-all .
        docker tag dirigible-all dirigiblelabs/dirigible-all:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-all:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push Dirigible - Runtime
      run: |
        cd releng/server-runtime
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-runtime -f Dockerfile-base .
        docker tag dirigible-base-platform-runtime dirigiblelabs/dirigible-base-platform-runtime:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-runtime:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-runtime .
        docker tag dirigible-runtime dirigiblelabs/dirigible-runtime:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-runtime:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push Dirigible - Trial
      run: |
        cd releng/trial-all
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-trial -f Dockerfile-base .
        docker tag dirigible-base-platform-trial dirigiblelabs/dirigible-base-platform-trial:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-trial:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-trial .
        docker tag dirigible-trial dirigiblelabs/dirigible-trial:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-trial:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push Dirigible - Keycloak
      run: |
        cd releng/server-keycloak-all
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-keycloak -f Dockerfile-base .
        docker tag dirigible-base-platform-keycloak dirigiblelabs/dirigible-base-platform-keycloak:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-keycloak:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-keycloak .
        docker tag dirigible-keycloak dirigiblelabs/dirigible-keycloak:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-keycloak:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../
    - name: Push Dirigible - Keycloak - Runtime
      run: |
        cd releng/server-runtime-keycloak
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-base-platform-runtime-keycloak -f Dockerfile-base .
        docker tag dirigible-base-platform-runtime-keycloak dirigiblelabs/dirigible-base-platform-runtime-keycloak:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-base-platform-runtime-keycloak:$DIRIGIBLE_VERSION
        docker build --build-arg DIRIGIBLE_VERSION=$DIRIGIBLE_VERSION -t dirigible-runtime-keycloak .
        docker tag dirigible-runtime-keycloak dirigiblelabs/dirigible-runtime-keycloak:$DIRIGIBLE_VERSION
        docker push dirigiblelabs/dirigible-runtime-keycloak:$DIRIGIBLE_VERSION
        docker image prune -a -f
        cd ../../

    - uses: buildpacks/github-actions/setup-pack@v4.1.0
    - name: Eclipse Dirigible Buildpack
      run: |
        cd releng/buildpacks/server/
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-base-dirigible . --target base
        docker tag dirigiblelabs/buildpacks-stack-base-dirigible dirigiblelabs/buildpacks-stack-base-dirigible:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-base-dirigible:${{ env.DIRIGIBLE_VERSION }}
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-run-dirigible . --target run
        docker tag dirigiblelabs/buildpacks-stack-run-dirigible dirigiblelabs/buildpacks-stack-run-dirigible:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-run-dirigible:${{ env.DIRIGIBLE_VERSION }}
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-build-dirigible . --target build
        docker tag dirigiblelabs/buildpacks-stack-build-dirigible dirigiblelabs/buildpacks-stack-build-dirigible:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-build-dirigible:${{ env.DIRIGIBLE_VERSION }}
        cd buildpack/
        find *.toml -type f -exec sed -i ''s/#{DirigibleVersion}#/${{ env.DIRIGIBLE_VERSION }}/g'' {} \;
        pack buildpack package dirigiblelabs/buildpacks-dirigible --config ./package.toml
        docker tag dirigiblelabs/buildpacks-dirigible dirigiblelabs/buildpacks-dirigible:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-dirigible:${{ env.DIRIGIBLE_VERSION }}
        pack builder create dirigiblelabs/buildpacks-builder-dirigible --config ./builder.toml
        docker tag dirigiblelabs/buildpacks-builder-dirigible dirigiblelabs/buildpacks-builder-dirigible:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-builder-dirigible:${{ env.DIRIGIBLE_VERSION }}
        cd ../../../../
    - name: Eclipse Dirigible Kyma Buildpack
      run: |
        cd releng/buildpacks/sap-kyma/
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-base-dirigible-kyma . --target base
        docker tag dirigiblelabs/buildpacks-stack-base-dirigible-kyma dirigiblelabs/buildpacks-stack-base-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-base-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-run-dirigible-kyma . --target run
        docker tag dirigiblelabs/buildpacks-stack-run-dirigible-kyma dirigiblelabs/buildpacks-stack-run-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-run-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-build-dirigible-kyma . --target build
        docker tag dirigiblelabs/buildpacks-stack-build-dirigible-kyma dirigiblelabs/buildpacks-stack-build-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-build-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        cd buildpack/
        find *.toml -type f -exec sed -i ''s/#{DirigibleVersion}#/${{ env.DIRIGIBLE_VERSION }}/g'' {} \;
        pack buildpack package dirigiblelabs/buildpacks-dirigible-kyma --config ./package.toml
        docker tag dirigiblelabs/buildpacks-dirigible-kyma dirigiblelabs/buildpacks-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        pack builder create dirigiblelabs/buildpacks-builder-dirigible-kyma --config ./builder.toml
        docker tag dirigiblelabs/buildpacks-builder-dirigible-kyma dirigiblelabs/buildpacks-builder-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-builder-dirigible-kyma:${{ env.DIRIGIBLE_VERSION }}
        cd ../../../../
    - name: Eclipse Dirigible Cloud Foundry Buildpack
      run: |
        cd releng/buildpacks/sap-cf/
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-base-dirigible-cf . --target base
        docker tag dirigiblelabs/buildpacks-stack-base-dirigible-cf dirigiblelabs/buildpacks-stack-base-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-base-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-run-dirigible-cf . --target run
        docker tag dirigiblelabs/buildpacks-stack-run-dirigible-cf dirigiblelabs/buildpacks-stack-run-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-run-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        docker build --build-arg DIRIGIBLE_VERSION=${{ env.DIRIGIBLE_VERSION }} -t dirigiblelabs/buildpacks-stack-build-dirigible-cf . --target build
        docker tag dirigiblelabs/buildpacks-stack-build-dirigible-cf dirigiblelabs/buildpacks-stack-build-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-build-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        cd buildpack/
        find *.toml -type f -exec sed -i ''s/#{DirigibleVersion}#/${{ env.DIRIGIBLE_VERSION }}/g'' {} \;
        pack buildpack package dirigiblelabs/buildpacks-dirigible-cf --config ./package.toml
        docker tag dirigiblelabs/buildpacks-dirigible-cf dirigiblelabs/buildpacks-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        pack builder create dirigiblelabs/buildpacks-builder-dirigible-cf --config ./builder.toml
        docker tag dirigiblelabs/buildpacks-builder-dirigible-cf dirigiblelabs/buildpacks-builder-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        docker push dirigiblelabs/buildpacks-builder-dirigible-cf:${{ env.DIRIGIBLE_VERSION }}
        cd ../../../../

#-----------------Publish to DockerHub-------------------#

#---------------Publish to Maven Central-----------------#

    - name: Publish packages to Maven Central
      run: |
        mvn javadoc:jar
        mvn deploy -P release -DskipTests -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASS_PHRASE }}

#---------------Publish to Maven Central-----------------#

#----------------Publish GitHub Release------------------#

    - name: Package WAR files
      run: |
        zip --junk-paths anonymous-all releng/anonymous-all/target/ROOT.war
        zip --junk-paths anonymous-runtime releng/anonymous-runtime/target/ROOT.war
        zip --junk-paths desktop-all releng/desktop-all/target/ROOT.war
        zip --junk-paths sap-cf-all releng/sap-cf-all/target/ROOT.war
        zip --junk-paths sap-cf-runtime releng/sap-cf-runtime/target/ROOT.war
        zip --junk-paths server-all releng/server-all/target/ROOT.war
        zip --junk-paths server-minimal releng/server-minimal/target/ROOT.war
        zip --junk-paths server-oauth releng/server-oauth/target/ROOT.war
        zip --junk-paths server-runtime releng/server-runtime/target/ROOT.war
        zip --junk-paths trial-all releng/trial-all/target/ROOT.war

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ env.DIRIGIBLE_VERSION }}
        release_name: ${{ env.DIRIGIBLE_VERSION }}
        draft: false
        prerelease: false
        body: |
          ## Eclipse Dirigible - ${{ env.DIRIGIBLE_VERSION }}

          #### Release:

          The lates release notes are available [here](https://www.dirigible.io/releases.html).

          > _**Note:** All released versions can be found [here](https://github.com/eclipse/dirigible/releases/)._
          
          #### Maven:

          250+ Maven dependencies can be found [here]( https://search.maven.org/#search%7Cga%7C1%7Corg.eclipse.dirigible).
          ```xml
          <dependency>
              <groupId>org.eclipse.dirigible</groupId>
              <artifactId>dirigible-server-all</artifactId>
              <version>${{ env.DIRIGIBLE_VERSION }}</version>
          </dependency>
          ```

          #### Helm:

          To install Eclipse Dirigible with Helm go to the [Setup with Helm](https://www.dirigible.io/help/setup/helm/) page.
          All Helm charts, with detailed explanation, setup and configurations, can be found [here](https://artifacthub.io/packages/search?org=dirigiblelabs).

          ```
          helm repo add dirigible https://eclipse.github.io/dirigible
          helm repo update
          helm install dirigible dirigible/dirigible --version ${{ env.DIRIGIBLE_VERSION }}
          ```

          #### Cloud Native Buildpacks:

          - [dirigiblelabs/buildpacks-builder-dirigible](https://hub.docker.com/r/dirigiblelabs/buildpacks-builder-dirigible) - builder for local deployments.
          - [dirigiblelabs/buildpacks-builder-dirigible-kyma](https://hub.docker.com/r/dirigiblelabs/buildpacks-builder-dirigible-kyma) - builder for Kyma ready deployments.
          - [dirigiblelabs/buildpacks-builder-dirigible-cf](https://hub.docker.com/r/dirigiblelabs/buildpacks-builder-dirigible-cf) - builder for Cloud Foundry ready deployments

          Building Docker Image with **pack**:
          ```
          pack build --builder dirigiblelabs/buildpacks-builder-dirigible:${{ env.DIRIGIBLE_VERSION }} <my-org>/<my-repository>
          ```
          > _**Note:** The command will package all sub-folders (`project1`, `project2`, etc.) into a Dirigible docker image with the application sources._

          #### Docker images:
            - [dirigiblelabs/dirigible-anonymous](https://hub.docker.com/r/dirigiblelabs/dirigible-anonymous/tags?page=1&ordering=last_updated) - Anonymous access.
            - [dirigiblelabs/dirigible-runtime-anonymous](https://hub.docker.com/r/dirigiblelabs/dirigible-runtime-anonymous/tags?page=1&ordering=last_updated) - Anonymous access _(runtime only)_.
            - [dirigiblelabs/dirigible-openshift](https://hub.docker.com/r/dirigiblelabs/dirigible-openshift/tags?page=1&ordering=last_updated) - OpenShift.
            - [dirigiblelabs/dirigible-sap-cf](https://hub.docker.com/r/dirigiblelabs/dirigible-sap-cf/tags?page=1&ordering=last_updated) - SAP Cloud Platform - Cloud Foundry environment.
            - [dirigiblelabs/dirigible-sap-cf-runtime](https://hub.docker.com/r/dirigiblelabs/dirigible-sap-cf-runtime/tags?page=1&ordering=last_updated) - SAP Cloud Platform - Cloud Foundry environment _(runtime only)_.
            - [dirigiblelabs/dirigible-sap-kyma](https://hub.docker.com/r/dirigiblelabs/dirigible-sap-kyma/tags?page=1&ordering=last_updated) - SAP Cloud Platform - Kyma environment.
            - [dirigiblelabs/dirigible-sap-kyma-runtime](https://hub.docker.com/r/dirigiblelabs/dirigible-sap-kyma-runtime/tags?page=1&ordering=last_updated) - SAP Cloud Platform - Kyma environment _(runtime only)_.
            - [dirigiblelabs/dirigible-all](https://hub.docker.com/r/dirigiblelabs/dirigible-all/tags?page=1&ordering=last_updated) - Basic docker image - recommended for local test & development.
            - [dirigiblelabs/dirigible-runtime](https://hub.docker.com/r/dirigiblelabs/dirigible-runtime/tags?page=1&ordering=last_updated) - Basic docker image - recommended for local test & development _(runtime only)_.
            - [dirigiblelabs/dirigible-trial](https://hub.docker.com/r/dirigiblelabs/dirigible-trial/tags?page=1&ordering=last_updated) - Trial _(guest/nickname access)_.
            - [dirigiblelabs/dirigible-keycloak](https://hub.docker.com/r/dirigiblelabs/dirigible-keycloak/tags?page=1&ordering=last_updated) - Keycloak integration.
            - [dirigiblelabs/dirigible-runtime-keycloak](https://hub.docker.com/r/dirigiblelabs/dirigible-runtime-keycloak/tags?page=1&ordering=last_updated) - Keycloak integration _(runtime only)_

          #### Base Docker images:
            - [dirigiblelabs/dirigible-base-platform-anonymous](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-anonymous/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-runtime-anonymous](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-runtime-anonymous/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-openshift](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-openshift/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-sap-cf](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-sap-cf/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-sap-cf-runtime](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-sap-cf-runtime/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-sap-kyma](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-sap-kyma/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-sap-kyma-runtime](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-sap-kyma-runtime/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-runtime](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-runtime/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-trial](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-trial/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-keycloak](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-keycloak/tags?page=1&ordering=last_updated)
            - [dirigiblelabs/dirigible-base-platform-runtime-keycloak](https://hub.docker.com/r/dirigiblelabs/dirigible-base-platform-runtime-keycloak/tags?page=1&ordering=last_updated)
          
          > _**Note:** All Docker images are availalbe [here](https://hub.docker.com/u/dirigiblelabs)_

          #### Available for download `*.war` packages:
            - _**[server-all](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/server-all.zip) - Basic package - recommended for local test & development.**_
            - [server-minimal](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/server-minimal.zip) - Minimal package still containing the WebIDE.
            - [anonymous-all](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/anonymous-all.zip) - Anonymous access.
            - [anonymous-runtime](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/anonymous-runtime.zip) - Anonymous access _(runtime only)_.
            - [sap-cf-all](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/sap-cf-all.zip) - SAP Cloud Platform - Cloud Foundry environment.
            - [sap-cf-runtime](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/sap-cf-runtime.zip) - SAP Cloud Platform - Cloud Foundry environment _(runtime only)_.
            - [desktop-all](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/desktop-all.zip) - Desktop package.
            - [server-oauth](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/server-oauth.zip) - Basic package - recommended for local test & development, _**requires additional OAuth configurations.**_
            - [server-runtime](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/server-runtime.zip) - Basic package - recommended for local test & development _(runtime only)_.
            - [trial-all](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/trial-all.zip) - Trial package _(guest/nickname)_.
            - [sap-all](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/sap-all.zip) - SAP BTP Neo Runtime package.
            - [sap-all-ephemeral](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/sap-all-ephemeral.zip) - SAP BTP Neo Runtime package _(ephemeral database & repository)_.
            - [sap-cms](https://github.com/eclipse/dirigible/releases/download/v${{ env.DIRIGIBLE_VERSION }}/sap-cms.zip) - SAP BTP Neo Runtime package _(content management only)_.
            
          > _**Note:** Unzip the downloaded file to extract the `ROOT.war` binary._
          
          For more information go to [https://www.dirigible.io/help/setup/](https://www.dirigible.io/help/setup/).
          
    - name: Upload anonymous-all
      id: upload-anonymous-all 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./anonymous-all.zip
        asset_name: anonymous-all.zip
        asset_content_type: application/zip
    - name: Upload anonymous-runtime
      id: upload-anonymous-runtime 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./anonymous-runtime.zip
        asset_name: anonymous-runtime.zip
        asset_content_type: application/zip
    - name: Upload desktop-all
      id: upload-desktop-all 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./desktop-all.zip
        asset_name: desktop-all.zip
        asset_content_type: application/zip
    - name: Upload sap-cf-all
      id: upload-sap-cf-all 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sap-cf-all.zip
        asset_name: sap-cf-all.zip
        asset_content_type: application/zip
    - name: Upload sap-cf-runtime
      id: upload-sap-cf-runtime
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sap-cf-runtime.zip
        asset_name: sap-cf-runtime.zip
        asset_content_type: application/zip
    - name: Upload server-all
      id: upload-server-all 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-all.zip
        asset_name: server-all.zip
        asset_content_type: application/zip
    - name: Upload server-minimal
      id: upload-server-minimal 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-minimal.zip
        asset_name: server-minimal.zip
        asset_content_type: application/zip
    - name: Upload server-oauth
      id: upload-server-oauth
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-oauth.zip
        asset_name: server-oauth.zip
        asset_content_type: application/zip
    - name: Upload server-runtime
      id: upload-server-runtime
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-runtime.zip
        asset_name: server-runtime.zip
        asset_content_type: application/zip
    - name: Upload trial-all
      id: upload-trial-all
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./trial-all.zip
        asset_name: trial-all.zip
        asset_content_type: application/zip

    - name: Build Dirigible for SAP BTP Neo
      run: mvn clean install -DskipTests -Djava.version=8 -Dmaven.javadoc.skip=true -Dmaven.compiler.source=1.8 -Dmaven.compiler.target=1.8

    - name: Package SAP BTP Neo WAR files
      run: |
        zip --junk-paths sap-all releng/sap-all/target/ROOT.war
        zip --junk-paths sap-all-ephemeral releng/sap-all-ephemeral/target/ROOT.war
        zip --junk-paths sap-cms releng/sap-cms/target/ROOT.war

    - name: Upload sap-all
      id: upload-sap-all
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sap-all.zip
        asset_name: sap-all.zip
        asset_content_type: application/zip

    - name: Upload sap-all-ephemeral
      id: upload-sap-all-ephemeral
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sap-all-ephemeral.zip
        asset_name: sap-all-ephemeral.zip
        asset_content_type: application/zip

    - name: Upload sap-cms
      id: upload-sap-cms
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sap-cms.zip
        asset_name: sap-cms.zip
        asset_content_type: application/zip

#----------------Publish GitHub Release------------------#

#----------------Publish Helm Release------------------#

    - name: Helm tool installer
      uses: Azure/setup-helm@v1
    - name: Helm Charts Release - Checkout gh-pages
      run: |
        mkdir charts-temp
        cp -r releng/helm-charts/ charts-temp/

        #### Git Checkout Workaround
        git add .github/
        git add .reuse/
        git add LICENSES/
        git add api/
        git add ext/
        git add groups/
        git add ide/
        git add logo/
        git add modules/
        git add releng/
        git add resources/
        git add templates/
        git reset --hard
        ####

        git fetch
        git checkout gh-pages
        
        cp charts/* .

    - name: Helm Charts Release - Set Chart Version - Dirigible
      run: |
        cd charts-temp/helm-charts/dirigible/
        find *.yaml -type f -exec sed -i ''s/#{DirigibleVersion}#/${{ env.DIRIGIBLE_VERSION }}/g'' {} \;

    - name: Helm Charts Release
      run: |

        cp charts/* charts-temp/helm-charts/
        cd charts-temp/helm-charts/

        helm package dirigible
        cd ..
        helm repo index helm-charts/ --url https://eclipse.github.io/dirigible/charts
        
        cp helm-charts/index.yaml ../.
        cp helm-charts/dirigible-$DIRIGIBLE_VERSION.tgz ../charts/

        cd ..
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git add index.yaml
        git add charts/
        git commit -m "Updates Helm Charts - Release $DIRIGIBLE_VERSION"
        git push origin gh-pages

        git add .
        git reset --hard
        git checkout master
#----------------Publish Helm Release------------------#

#-----------------Create GitHub Branch-------------------#

    - name: Create GitHub Branch
      run: |
        git checkout -b $DIRIGIBLE_VERSION
        git push origin $DIRIGIBLE_VERSION

#-----------------Create GitHub Branch-------------------#

#-----------------Update Trial Instance------------------#

    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
    - name: Setup Kube Config File
      run: |
        mkdir $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" >> $HOME/.kube/config
    - name: Update Trial Instance
      run: kubectl set image deployment/trial-dirigible dirigible=dirigiblelabs/dirigible-trial:$DIRIGIBLE_VERSION

#-----------------Update Trial Instance------------------#

