name: Pull Request

on:
  pull_request:
    branches:
      - main
      - master
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
#  code-style:
#    runs-on: ${{ matrix.os }}-latest
#    strategy:
#      matrix:
#        os: [ubuntu]
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Set up JDK Corretto 21
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'corretto'
#          java-version: 21
#      - name: Validate Java code formatting
#        run: mvn -T 1C formatter:validate
#
#  tests:
#    runs-on: ${{ matrix.os }}-latest
#    strategy:
#      matrix:
#        os: [ubuntu, windows]
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Cache local Maven repository
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-maven-
#      - name: Set up JDK Corretto 21
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'corretto'
#          java-version: 21
#      - name: Install NodeJS
#        uses: actions/setup-node@v4
#        with:
#          node-version: 18
#      - name: Install esbuild
#        run: npm i -g esbuild
#      - name: Install TypeScript compiler
#        run: npm i -g typescript
#      - name: Maven Build
#        run: mvn -T 1C clean install -D maven.javadoc.skip=false -U

#  integration-tests-h2:
#    runs-on: macos-13
#    steps:
#      - name: Setup Chrome
#        uses: browser-actions/setup-chrome@v1.5.0
#        with:
#          chrome-version: stable
#      - if: runner.os == 'Linux'
#        run: chrome --version
#      - if: runner.os == 'macOS'
#        run: '/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version'
#      - if: runner.os == 'Windows'
#        run: (Get-Item (Get-Command chrome).Source).VersionInfo.ProductVersion
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Cache local Maven repository
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-maven-
#      - name: Set up JDK Corretto 21
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'corretto'
#          java-version: 21
#      - name: Install NodeJS
#        uses: actions/setup-node@v4
#        with:
#          node-version: 18
#      - name: Install esbuild
#        run: npm i -g esbuild
#      - name: Install TypeScript compiler
#        run: npm i -g typescript
#      - name: Maven Build
#        run: mvn -T 1C clean install -D skipTests -D maven.javadoc.skip=true -D license.skip=true -U
#      - name: Integration tests
#        run: mvn -f tests/pom.xml verify -P integration-tests
#      - name: Upload selenide screenshots
#        uses: actions/upload-artifact@v4.3.1
#        if: always()
#        with:
#          retention-days: 1
#          name: selenide-screenshots
#          path: tests/tests-integrations/build/reports/tests

  integration-tests-postgresql:
    runs-on: macos-13

    env:
      POSTGRESQL_DB: testdb
      POSTGRESQL_USER: testuser
      POSTGRESQL_PASS: testpass
      DIRIGIBLE_DATASOURCE_DEFAULT_DRIVER: org.postgresql.Driver
      DIRIGIBLE_DATASOURCE_DEFAULT_URL: jdbc:postgresql://localhost:5432/${{ env.POSTGRESQL_DB }}
      DIRIGIBLE_DATASOURCE_DEFAULT_USERNAME: ${{ env.POSTGRESQL_USER }}
      DIRIGIBLE_DATASOURCE_DEFAULT_PASSWORD: ${{ env.POSTGRESQL_PASS }}

    steps:
      - name: Setup Docker on macOS
        uses: douglascamata/setup-docker-macos-action@v1-alpha

      - name: Start PostgreSQL Service
        run: |
          docker run -d --name postgres \
          -e POSTGRES_DB=${{ env.POSTGRESQL_DB }} \
          -e POSTGRES_USER= ${{ env.POSTGRESQL_USER }} \
          -e POSTGRES_PASSWORD=${{ env.POSTGRESQL_PASS }} \
          -p 5432:5432 \
          postgres:16

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1.5.0
        with:
          chrome-version: stable
      - if: runner.os == 'Linux'
        run: chrome --version
      - if: runner.os == 'macOS'
        run: '/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version'
      - if: runner.os == 'Windows'
        run: (Get-Item (Get-Command chrome).Source).VersionInfo.ProductVersion
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Set up JDK Corretto 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install esbuild
        run: npm i -g esbuild
      - name: Install TypeScript compiler
        run: npm i -g typescript
      - name: Maven Build
        run: mvn -T 1C clean install -D skipTests -D maven.javadoc.skip=true -D license.skip=true -U
      - name: Integration tests
        run: mvn -f tests/pom.xml verify -P integration-tests
      - name: Upload selenide screenshots
        uses: actions/upload-artifact@v4.3.1
        if: always()
        with:
          retention-days: 1
          name: selenide-screenshots
          path: tests/tests-integrations/build/reports/tests
