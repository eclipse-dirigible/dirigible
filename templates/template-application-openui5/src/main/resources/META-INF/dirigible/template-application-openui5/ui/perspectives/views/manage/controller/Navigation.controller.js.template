sap.ui.define([
	'jquery.sap.global',
	'sap/ui/core/Fragment',
	'sap/ui/core/mvc/Controller',
	'sap/ui/model/json/JSONModel',
	'sap/m/Popover',
	'sap/m/Button'
], function (jQuery, Fragment, Controller, JSONModel, Popover, Button) {
	"use strict";

	var CController = Controller.extend("{{projectName}}.controller.Navigation", {
		onInit : function() {
			var oModel = new sap.ui.model.json.JSONModel(),
				oEntitiesModel = new sap.ui.model.json.JSONModel([
					{{#uiManageModels_}}
					{
						"displayName": "{{value.menuLabel}}",
						"entityName": "{{value.menuKey}}"
					}{{^last}},{{/last}}
					{{/uiManageModels_}}
				]),

				myView = this.getView(),
				toolPage = myView.byId("toolPage");
			
			toolPage.setSideExpanded(false);

			oModel.loadData("/services/v4/js/{{projectName}}/api/launchpad/perspectives.js"); // to load data to the model
			myView.setModel(oModel);
			myView.setModel(oEntitiesModel, "entities");

			this._setToggleButtonTooltip(sap.ui.Device.system.desktop);
			
			var oRouter = this.getOwnerComponent().getRouter();
            oRouter.getRoute("home").attachPatternMatched(this._onRouteMatchedDefault, this);
            {{#uiManageModels_}}
            oRouter.getRoute("{{value.menuKey}}").attachPatternMatched(this._onRouteMatched, this);
            {{/uiManageModels_}}
		},

		onSelectTab: function(oEvent) {
			var oSelectedItem = oEvent.getParameter("selectedItem");
			var sEntityName = oSelectedItem.getKey();
			this.getOwnerComponent().getRouter().navTo(sEntityName);
			
		},

		onSideNavButtonPress : function() {
			var oView = this.getView();
			var toolPage = oView.byId("toolPage");
			var sideExpanded = toolPage.getSideExpanded();

			this._setToggleButtonTooltip(sideExpanded);

			toolPage.setSideExpanded(!toolPage.getSideExpanded());
		},

		_setToggleButtonTooltip : function(bLarge) {
			var toggleButton = this.getView().byId('sideNavigationToggleButton');
			if (bLarge) {
				toggleButton.setTooltip('Large Size Navigation');
			} else {
				toggleButton.setTooltip('Small Size Navigation');
			}
		},
		
		onNavigationListSelect: function(oEvent) {
			var url = oEvent.getParameter("item").getKey();
			window.open(url, '_blank');
		},
		
		_onRouteMatchedDefault: function (oEvent) {
        	{{#uiManageModels_}}
        	{{#first}}
            this.getOwnerComponent().getRouter().navTo("{{value.menuKey}}");
            {{/first}}
            {{/uiManageModels_}}
        },

        _onRouteMatched: function (oEvent) {
            this.getView().byId("entitiesMenu").setSelectedKey(oEvent.getParameter("name"));
        }

	});


	return CController;

});
