sap.ui.define([
	"sap/ui/core/mvc/Controller"
], function(Controller) {
	"use strict";

	return Controller.extend("[[projectName]].controller.[[fileName]]", {
		sUrl: "/services/v4/js/[[projectName]]/api/[[perspectiveName]]/[[fileName]].js",
		
		onInit : function(){
			// instantiate the View
			var myView = this.getView(); 
			
			// create a Model and assign it to the View
			var oModel = new sap.ui.model.json.JSONModel();
			oModel.loadData(this.sUrl); // to load data to the model
			myView.setModel(oModel);
			
			//identificate if this is add or edit
			this.bAdd = undefined;
		},
		onAddItem: function(){
			var oModel = new sap.ui.model.json.JSONModel();
			this.openDialog(oModel);
			this.bAdd = true;
		},
		onEditItem: function(oEvent){
			var oModel = new sap.ui.model.json.JSONModel(oEvent.getSource().getBindingContext().getObject());
			this.openDialog(oModel);	
			this.bAdd = false;
		},
		onDeleteItem: function(oEvent){
			jQuery.sap.require("sap.m.MessageBox");
			var iId = oEvent.getSource().getBindingContext().getProperty("id");
			sap.m.MessageBox.confirm("Do you really want to delete this item?", {
			    title: "Confirm",                                  // default
			    onClose: function(oAction) {
			    	if (oAction === sap.m.MessageBox.Action.DELETE){
			    		this.deleteItem(iId);
			    	}
			    	
			    }.bind(this),                                     // default
			    styleClass: "",                                       // default
			    initialFocus: null,                                   // default
			    textDirection: sap.ui.core.TextDirection.Inherit,     // default
			    actions: [sap.m.MessageBox.Action.DELETE, sap.m.MessageBox.Action.CANCEL]
		    });	
		},
		openDialog: function(oModel){
			this.getView().setModel(oModel, "dialog");

			if (!this._oDialog) {
				this._oDialog = new sap.ui.xmlfragment("[[projectName]].view.AddEditDialog[[fileName]]", this);
				this.getView().addDependent(this._oDialog);
			}
			this._oDialog.open();	
		},
		handleSaveDialog: function(){
			var oView = this.getView(),
				oDialogModel = oView.getModel("dialog"),
				oModel,
				aProducts,
				sType,
				oEntity;
				
			[[#properties]]
			var [[name]] = oDialogModel.getProperty("/[[name]]");
			[[/properties]]

			oModel = oView.getModel();
			aProducts = oModel.getProperty("/");
			
			oEntity = {
				[[#properties]]
					[[name]]: [[name]][[^last]],[[/last]]	
				[[/properties]]					
			};
			if (this.bAdd) {
				sType = "POST";
				this.sendAjax(sType, oEntity, null, function (data) {
//					oEntity.productsId = data.id;
					aProducts.push(oEntity);
					oModel.refresh();
				});
			} else {
				sType = "PUT";
				this.sendAjax(sType, oEntity, productsId, function (data) {
					oModel.refresh();
				});
			}

			this._oDialog.close();
		},
		sendAjax: function (sType, oData, iId, onSuccess, onError) {
			var sUrl = this.sUrl;
			if (iId) {
				sUrl += "/" + iId;
			}
			jQuery.ajax({
                type: sType,
                url: sUrl,
                contentType: "application/json",
                async: true,
                data: JSON.stringify(oData),
                success: function (data, textStatus, jqXHR) {
                    onSuccess(data, textStatus, jqXHR);
                },
                error: function (jqXHR) {
                    if (onError) {
                        onError(jqXHR);
                    } else {
                        this.defaultErrorFunction(jqXHR);
                    }
                }.bind(this)
            });
		},
		handleCloseDialog: function(){
			this._oDialog.close();
		},
		deleteItem: function(iId){
			var oModel = this.getView().getModel(),
				aData =	oModel.getProperty("/"),
				iIndex = aData.findIndex(function(oObject){
					return oObject["id"] === iId;
				});
				
				aData.splice(iIndex, 1);
				oModel.refresh();
			}
	});
});
