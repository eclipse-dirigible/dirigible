#set($dollar = '$' )
angular.module('page', []);
angular.module('page')
.factory('$messageHub', [function(){
	var messageHub = new FramesMessageHub();

	var message = function(evtName, data){
#if($includeLaunchpad)
		messageHub.post({data: data}, '${projectName}.${perspectiveName}.${name}.' + evtName);
#else
		messageHub.post({data: data}, '${launchpadName}.${perspectiveName}.${name}.' + evtName);
#end
	};

	var on = function(topic, callback){
		messageHub.subscribe(callback, topic);
	};

	return {
		message: message,
		on: on,
		onEntityRefresh: function(callback) {
#if($includeLaunchpad)
			on('${projectName}.${perspectiveName}.${name}.refresh', callback);
#else
			on('${launchpadName}.${perspectiveName}.${name}.refresh', callback);
#end
		},
#foreach ($property in $properties)
#if($property.widgetType == "DROPDOWN" && $property.relationshipEntityName != "")
		on${property.relationshipEntityName}Modified: function(callback) {
#if($includeLaunchpad)
			on('${projectName}.${perspectiveName}.${property.relationshipEntityName}.modified', callback);
#else
			on('${launchpadName}.${perspectiveName}.${property.relationshipEntityName}.modified', callback);
#end
		},
#end
#end
		messageEntityModified: function() {
			message('modified');
		}
	};
}])
.controller('PageController', function ($scope, $http, $messageHub) {

	var api = '../../../../../../../../services/v4/js/${projectName}/api/${perspectiveName}/${name}.js';

	$scope.load = function() {
		$http.get(api)
		.success(function(data) {
#foreach ($property in $properties)
			var chartData${foreach.index} = [];
#end
			for (var i = 0; i < data.length; i ++) {
#foreach ($property in $properties)
				chartData${foreach.index}.push(data[i].${property.name});
#end
			}
			$.jqplot.config.enablePlugins = true;
			$.jqplot('chart', [#foreach ($property in $properties)chartData${foreach.index}#if($foreach.hasNext), #end#end], {
				title: '${title}', 
				seriesDefaults: {
					rendererOptions: {
						smooth: true
					}
				}
			});
		});
	}
	$scope.load();

	$messageHub.onEntityRefresh($scope.load);

});
