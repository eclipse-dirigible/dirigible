{
    "feeds": [],
    "scripts": [],
    "code": "let url = new URL(window.location);\nlet params = new URLSearchParams(url.search);\nlet taskId = params.get(\"taskId\");\n\n$scope.onApproveClicked = function () {\n    const url = `/services/ts/leave-request/api/ProcessService.ts/requests/${taskId}/approve`;\n    $http.put(url)\n        .then(function (response) {\n        if (response.status != 200) {\n            alert(`Unable to approve request: '${response.message}'`);\n            return;\n        }\n        $scope.entity = {};\n        alert(\"Request Approved\");\n    });\n};\n\n$scope.onDeclineClicked = function () {\n    const url = `/services/ts/leave-request/api/ProcessService.ts/requests/${taskId}/decline`;\n    $http.put(url)\n        .then(function (response) {\n        if (response.status != 200) {\n            alert(`Unable to decline request: '${response.message}'`);\n            return;\n        }\n        $scope.entity = {};\n        alert(\"Request Declined\");\n    });\n\n};\n\nconst detailsUrl = `/services/ts/leave-request/api/ProcessService.ts/requests/${taskId}/details`;\n$http.get(detailsUrl)\n    .then(function (response) {\n        if (response.status != 200) {\n            alert(`Unable to get details for the request: '${response.message}'`);\n            return;\n        }\n        const details = response.data;\n\n        // fill details\n        $scope.model.requester = details.requester;\n        $scope.model.fromDate = new Date(details.fromDate);\n        $scope.model.toDate = new Date(details.toDate);\n    });",
    "form": [
        {
            "controlId": "header",
            "groupId": "fb-display",
            "title": "Process leave request",
            "size": 1
        },
        {
            "controlId": "input-textfield",
            "groupId": "fb-controls",
            "id": "requesterId",
            "label": "Requester",
            "horizontal": false,
            "isCompact": false,
            "placeholder": "",
            "type": "text",
            "model": "requester",
            "required": false,
            "minLength": 0,
            "maxLength": -1,
            "validationRegex": "",
            "errorState": "Incorrect input"
        },
        {
            "controlId": "input-date",
            "groupId": "fb-controls",
            "id": "fromDateId",
            "label": "From date",
            "horizontal": false,
            "isCompact": false,
            "type": "date",
            "model": "fromDate",
            "required": false
        },
        {
            "controlId": "input-date",
            "groupId": "fb-controls",
            "id": "toDateId",
            "label": "To date",
            "horizontal": false,
            "isCompact": false,
            "type": "date",
            "model": "toDate",
            "required": false
        },
        {
            "controlId": "container-hbox",
            "groupId": "fb-containers",
            "children": [
                {
                    "controlId": "button",
                    "groupId": "fb-controls",
                    "label": "Approve",
                    "type": "positive",
                    "sizeToText": false,
                    "isSubmit": true,
                    "isCompact": false,
                    "callback": "onApproveClicked()"
                },
                {
                    "controlId": "button",
                    "groupId": "fb-controls",
                    "label": "Decline",
                    "type": "negative",
                    "sizeToText": false,
                    "isSubmit": true,
                    "isCompact": false,
                    "callback": "onDeclineClicked()"
                }
            ]
        }
    ]
}