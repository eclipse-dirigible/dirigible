#set($dollar = '$')
#set($hasDropdowns = false)
#foreach ($property in $filter.properties)
#if($property.widgetType == "DROPDOWN")
#set($hasDropdowns = true)
#end
#end
angular.module('page', ["ideUI", "ideView", "entityApi"])
	.config(["messageHubProvider", function (messageHubProvider) {
		messageHubProvider.eventIdPrefix = '${projectName}.${perspectiveName}.${name}';
	}])
	.config(["entityApiProvider", function (entityApiProvider) {
		entityApiProvider.baseUrl = "/services/ts/${projectName}/gen/api/${perspectiveName}/${name}Service.ts";
	}])
	.controller('PageController', ['$scope', 'messageHub', 'ViewParameters',#if($hasDropdowns) '${dollar}http',#end 'entityApi', function ($scope, messageHub, ViewParameters,#if($hasDropdowns) ${dollar}http,#end entityApi) {

		$scope.entity = {};
		$scope.formErrors = {};

		$scope.dataParameters = ViewParameters.get();
		if ($scope.dataParameters?.filter) {
			const filter = $scope.dataParameters.filter;
#foreach ($property in $filter.properties)
#if($property.isDateType)
			if (filter.${property.name}) {
				filter.${property.name} = new Date(filter.${property.name});
			}
#end
#end
#foreach ($property in $filter.properties)
#if($property.widgetType == "DROPDOWN")
			${dollar}scope.${property.name}Value = filter.${property.name};
#end
#end
			$scope.entity = filter;
#foreach ($property in $filter.properties)
#if($property.widgetType == "DROPDOWN")
			${dollar}scope.entity.${property.name} = undefined;
#end
#end
		}

		$scope.isValid = function (isValid, property) {
			${dollar}scope.formErrors[property] = !isValid ? true : undefined;
			for (let next in ${dollar}scope.formErrors) {
				if (${dollar}scope.formErrors[next] === true) {
					${dollar}scope.isFormValid = false;
					return;
				}
			}
			${dollar}scope.isFormValid = true;
		};

		$scope.filter = function () {
			const filter = {
				...$scope.entity
			};
#foreach ($property in $filter.properties)
#if($property.isDateType)
			filter.${property.name} = filter.${property.name}?.getTime();
#end
#end
			messageHub.postMessage("filter", filter);
			$scope.cancel();
		};

		$scope.resetFilter = function () {
			$scope.entity = {};
			$scope.filter();
		};

		$scope.cancel = function () {
			messageHub.closeDialogWindow("${name}-details-filter");
		};
#if($hasDropdowns)

		//----------------Dropdowns-----------------//
#foreach ($property in $filter.properties)
#if($property.widgetType == "DROPDOWN")
		$scope.options${property.name} = [];
#end
#end
#foreach ($property in $filter.properties)
#if($property.widgetType == "DROPDOWN")

		${dollar}http.get("/services/ts/${projectName}/gen/api/${property.relationshipEntityPerspectiveName}/${property.relationshipEntityName}Service.ts").then(function (response) {
			${dollar}scope.options${property.name} = response.data.map(e => {
				return {
					value: e.${property.widgetDropDownKey},
					text: e.${property.widgetDropDownValue}
				}
			});
			${dollar}scope.entity.${property.name} = ${dollar}scope.${property.name}Value;
		});
#end
#end
#foreach ($property in $filter.properties)
#if($property.widgetType == "DROPDOWN")
		${dollar}scope.options${property.name}Value = function (optionKey) {
			for (let i = 0; i < ${dollar}scope.options${property.name}.length; i++) {
				if (${dollar}scope.options${property.name}[i].value === optionKey) {
					return ${dollar}scope.options${property.name}[i].text;
				}
			}
			return null;
		};
#end
#end
		//----------------Dropdowns-----------------//
#end

	}]);