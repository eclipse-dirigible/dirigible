import { request, response } from "sdk/http";

if (request.getMethod() !== 'POST') {
    response.setContentType('text/plain');
    response.println("Only POST request are allowed.");
    throw new Error("Only POST request are allowed.");
}

let MAPPING_MODEL = ${mapping};

let SOURCE_METADATA = {};
let TARGET_METADATA = {};
MAPPING_MODEL.mapping.structures.forEach((structure) => {
    if (structure.type == "SOURCE") {
        SOURCE_METADATA = structure;
    }
    if (structure.type == "TARGET") {
        TARGET_METADATA = structure;
    }
}
);

response.setContentType('text/plain');

let SOURCE_DATA = [];
try {
    SOURCE_DATA = JSON.parse(request.getText());
} catch (e) {
    response.setContentType('text/plain');
    response.println("Error on parsing the data from request: " + e);
    throw e;
}
let TARGET_DATA = [];
SOURCE_DATA.forEach((SOURCE_RECORD) => {
    let TARGET_RECORD = {};
    let skip = false;
    for (let i = 0; i < TARGET_METADATA.columns.length; i++) {
        try {
            if (TARGET_METADATA.columns[i].direct) {
                TARGET_RECORD[TARGET_METADATA.columns[i].name] = SOURCE_RECORD[TARGET_METADATA.columns[i].direct];
            } else if (TARGET_METADATA.columns[i].constant) {
                TARGET_RECORD[TARGET_METADATA.columns[i].name] = TARGET_METADATA.columns[i].constant;
            } else if (TARGET_METADATA.columns[i].formula) {
                TARGET_RECORD[TARGET_METADATA.columns[i].name] = eval(TARGET_METADATA.columns[i].formula);
            } else if (TARGET_METADATA.columns[i].module) {
                let module = import(TARGET_METADATA.columns[i].module);
                if (module) {
                    TARGET_RECORD[TARGET_METADATA.columns[i].name] = module.map(SOURCE_METADATA, TARGET_METADATA, SOURCE_RECORD, TARGET_RECORD, TARGET_METADATA.columns[i].name);
                } else {
                    console.error("Error occured when loading: " + TARGET_METADATA.columns[i].module);
                }
            }
            if (TARGET_METADATA.columns[i].criteria) {
                if (eval(TARGET_RECORD[TARGET_METADATA.columns[i].name] + TARGET_METADATA.columns[i].criteria)) {
                    skip = true;
                    break;
                }
            }
        } catch (e) {
            console.error(e);
        }
    }
    if (!skip) {
        TARGET_DATA.push(TARGET_RECORD);
    }
});

response.println(JSON.stringify(TARGET_DATA));

response.flush();
response.close();
