import { Controller, Get } from "@dirigible/http"
import { ${name}Repository, ${name}Filter, ${name}PaginatedFilter } from "../../dao/entities/${name}Repository";

@Controller
class ${name}Service {

    private readonly repository = new ${name}Repository();

    @Get("/")
    public filter(_, ctx) {
        const filter: ${name}PaginatedFilter = {
            categoryId: ctx.queryParameters.CategoryId ? parseInt(ctx.queryParameters.CategoryId) : undefined,
            startDate: ctx.queryParameters.StartDate ? new Date(ctx.queryParameters.StartDate) : undefined,
            endDate: ctx.queryParameters.EndDate ? new Date(ctx.queryParameters.EndDate) : undefined,
            "$limit": ctx.queryParameters["$limit"] ? parseInt(ctx.queryParameters["$limit"]) : undefined,
            "$offset": ctx.queryParameters["$offset"] ? parseInt(ctx.queryParameters["$offset"]) : undefined
        }

        return this.repository.findAll(filter);
    }

    @Get("/count")
    public count(_, ctx) {
        const filter: ${name}Filter = {
            categoryId: ctx.queryParameters.CategoryId ? parseInt(ctx.queryParameters.CategoryId) : undefined,
            startDate: ctx.queryParameters.StartDate ? new Date(ctx.queryParameters.StartDate) : undefined,
            endDate: ctx.queryParameters.EndDate ? new Date(ctx.queryParameters.EndDate) : undefined
        }

        return this.repository.count(filter);
    }

}