/*
 * Generated by Eclipse Dirigible based on model and template.
 *
 * Do not modify the content as it may be re-generated again.
 */
const daoTemplateManager = dirigibleRequire("template-application-dao/template/template");
const generateUtils = dirigibleRequire("ide-generate-service/template/generateUtils");
const parameterUtils = dirigibleRequire("ide-generate-service/template/parameterUtils");

exports.generate = function (model, parameters) {
    model = JSON.parse(model).model;
    const templateSources = exports.getTemplate(parameters).sources;
    parameterUtils.process(model, parameters)
    return generateUtils.generateFiles(model, parameters, templateSources);
};

exports.getTemplate = function (parameters) {
    const daoTemplate = daoTemplateManager.getTemplate(parameters);

    let templateSources = [{
        location: "/template-application-rest/api/utils/HttpUtils.ts.template",
        action: "copy",
        rename: "gen/api/utils/HttpUtils.ts",
    }, {
        location: "/template-application-rest/api/utils/ForbiddenError.ts.template",
        action: "copy",
        rename: "gen/api/utils/ForbiddenError.ts",
    }, {
        location: "/template-application-rest/api/utils/ValidationError.ts.template",
        action: "copy",
        rename: "gen/api/utils/ValidationError.ts",
    }, {
        location: "/template-application-rest/api/entity.ts.template",
        action: "generate",
        rename: "gen/api/{{perspectiveName}}/{{name}}Service.ts",
        engine: "velocity",
        collection: "models"
    }, {
        location: "/template-application-rest/api/reportEntity.ts.template",
        action: "generate",
        rename: "gen/api/{{perspectiveName}}/{{name}}Service.ts",
        engine: "velocity",
        collection: "reportModels"
    }, {
        location: "/template-application-dao/project.json.mjs",
        action: "generate",
        rename: "project.json",
        engine: "javascript"
    }, {
        location: "/template-application-dao/tsconfig.json.template",
        action: "generate",
        rename: "tsconfig.json",
        engine: "velocity"
    }];
    templateSources = templateSources.concat(daoTemplate.sources);

    let templateParameters = [];
    templateParameters = templateParameters.concat(daoTemplate.parameters);

    return {
        name: "Application - REST",
        description: "Application with REST APIs",
        extension: "model",
        sources: templateSources,
        parameters: templateParameters
    };
};